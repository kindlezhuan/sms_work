package com.hk.sms.action;

import java.util.HashMap;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang.StringUtils;
import org.apache.struts2.ServletActionContext;

import com.hk.sms.constant.RetAjaxFlags;
import com.hk.sms.dao.UserDao;
import com.hk.sms.model.User;
import com.opensymphony.xwork2.Action;

public class LoginAction extends BaseAction { 
    
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private String username; 
   
    private String password; 
   
    private String msg; 
	private String json;
	private RetAjaxFlags result;
    private UserDao userDao;
	public String toLogin(){
		return SUCCESS;
	}
    /** 用户登陆 */ 
    @SuppressWarnings("unused")
	public String login() { 
    HttpServletRequest request = ServletActionContext.getRequest();
       User user = null;
      if(StringUtils.isBlank(this.username) || StringUtils.isBlank(this.password)) { 
    	  if(result == null)
    		  System.out.println("result = null");
    	result.setMsg_no("-2");
//    	result.setMsg("data error");
        return SUCCESS;
      }else {
    	  try {
        	user = userDao.getUser(this.username, this.password);
  		} catch (Exception e) {
  			e.printStackTrace();
  			result = RetAjaxFlags.onDbError();
  			return "ajax";
  		}

    	  }
      if(user == null || user.getPwd() == null || !user.getPwd().equals(this.password)) { 
        //登陆失败 
        this.msg = "用户不存在或密码错误！"; 
        result.setMsg(msg);
        return "ajax"; 
      } else { 
        //登陆成功 
        //设置session 
        this.getSession().setAttribute("_USER_INFO_LOGIN_NAME_", this.username); 
        this.getSession().setAttribute("_USER_INFO_USER_ID_", user.getId()); 
        this.getSession().setAttribute("_USER_INFO_USER_INFO_", user); 
        
        //设置cookie 
        this.getResponse().addCookie(new Cookie("_USER_INFO_LOGIN_NAME_", this.username)); 
//        this.getResponse().addCookie(new Cookie("_USER_INFO_USER_ID_", user.getId().toString())); 
        result = RetAjaxFlags.onSuccess(null);
        
        return "ajax"; 
      } 
    } 
	/**
	 * 跳转到首页
	 * @return
	 */
	public String toFirstPage(){
		//从session中获得登陆者的登陆类型判断要跳转的页面
		HttpServletRequest request = ServletActionContext.getRequest();
		HttpSession session = request.getSession();
		User user = (User) session.getAttribute("_USER_INFO_USER_INFO_");
		if(user==null){ 
			this.addActionMessage("您的登陆信息已过期，请重新登录！");
			return "login";
		}else {
			return SUCCESS;
		}

	}
    /** 
     * 注销 
     */ 
    public String loginout() { 
      //清空session 
      this.getSession().invalidate(); 
      return Action.SUCCESS; 
    } 

    public HttpSession getSession() { 
      return ServletActionContext.getRequest().getSession(); 
    } 
   
    public HttpServletRequest getRequest() { 
      return ServletActionContext.getRequest(); 
    } 
   
    public HttpServletResponse getResponse() { 
      return ServletActionContext.getResponse(); 
    } 
    public String getMsg() { 
        return msg; 
      } 
     
      public void setMsg(String msg) { 
        this.msg = msg; 
      } 

     
      public String getPassword() { 
        return password; 
      } 
     
      public void setPassword(String password) { 
        this.password = password; 
      }

	public UserDao getUserDao() {
		return userDao;
	}

	public void setUserDao(UserDao userDao) {
		this.userDao = userDao;
	} 

	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getJson() {
		return json;
	}
	public void setJson(String json) {
		this.json = json;
	}
	public RetAjaxFlags getResult() {
		return result;
	}
	public void setResult(RetAjaxFlags result) {
		this.result = result;
	}
  }