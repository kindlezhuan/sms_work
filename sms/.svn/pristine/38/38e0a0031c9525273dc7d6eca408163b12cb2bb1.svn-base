/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */
function CallWebService(method, params, onSuccess, onFailure) {
	Ext.Ajax.request({
		type : "POST", // 发送数据
		url : method, // WebService 地址和方法
		params : params,
		success : onSuccess,
		failure : onFailure
	// 执行失败
	});
};
var s = document.getElementById("loginUserInfo");
var westPanel;
var loginName = s.value;
var tbar;
var cfqyFlag = false;
var czqyFlag = false;
var pointList; // 点信息集合
var carPiList; // 车辆点信息集合
var markerList; // 标注集合
var lineList; // 线集合
var CarInfo;// 车辆的信息
var premarker; // 上一个标注点
Ext.onReady(function() {
	/*
	 * 加载主菜单
	 */
	function LoadMainMenus2() {

		return tb;
	}
	;
	// tbar = LoadMainMenus2();
});

// 自定义MyViewport类，继承Ext.Viewport
Ext
		.define(
				'MyApp3.view.zf_MyViewport',
				{
					extend : 'Ext.container.Viewport',
					requires : [ 'Ext.tree.Panel', 'Ext.tree.View' ],

					itemId : 'headerPanel',
					layout : 'border',
					// 初始化Viewport组件
					initComponent : function() {
						var me = this;
						var tabs = new Ext.TabPanel(
								{
									xtype : 'tabpanel',
									plain : false,
									region : 'center', // 布局位置
									id : 'contentPanel',
									items : [ {
										xtype : 'panel',
										title : '首页',
										closable : true,
										html : '<iframe id="content" name="content" src="firstPage/fp_toCSfp.do" width="100%" height="100%" frameborder="0"></iframe>'
									} ]
								});

						// 定义数据
						var data = [
								[ '浙H18452', '已到达', '衢州市环保局', 'null', '巨化集团',
										'查看' ],
								[ '浙H2356A', '已到达', '衢州市环保局', 'null', '黄家乡',
										'查看' ],
								[ '浙H3356B', '已到达', '衢州市环保局', 'null', '衢州站',
										'查看' ],
								[ '浙H1356C', '运输中...', '衢州市环保局', 'null', '花园乡',
										'查看' ] ];

						// 重新渲染列
						var renderView = function(value, meta, record) {
							if (value == '查看') {
								return "<a href=\"javascript:window.frames['GIS'].HistoryGps.start('"
										+ record.data.start
										+ "','"
										+ record.data.end
										+ "','"
										+ record.data.cphm + "');\">查看</a>";
							}
						};
						
						// 转换原始数据为EXT可以显示的数据
						var store = new Ext.data.JsonStore({
							fields : [ {
								name : 'cl_id'
							},{
								name : 'cph'
							}, // mapping:0 这样的可以指定列显示的位置，0代表第1列，可以随意设置列显示的位置
							{
								name : 'csdwmc'
							}, {
								name : 'jsdwmc'
							}, {
								name : 'ysfzr'
							}, {
								name : 'zt'
							}, {
								name : 'qymc'
							}, {
								name : 'lxdh'
							}, {
								name : 'yswflx'
							} ],
							proxy : {
						// load using HTTP
								type : 'ajax',
								method : 'POST',
							
								url : 'gis/gis_queryCarList.do',
								reader : {
									type : 'json',
									root : 'data',
									totalProperty : 'total'
								}
							},
								autoLoad : false
						});

						var columns = [ {
							header : '企业',
							dataIndex : 'qymc',
							width : 120,
							sortable : false
						},{
							header : '车牌',
							dataIndex : 'cph',
							width : 140,
							sortable : false
						}, {
							header : '状态',
							dataIndex : 'clzt',
							sortable : false,
							//车辆状态 ： 1 运输中  2空闲
							renderer:function(value, cellmeta, record, rowIndex, columnIndex, store){
                                 if(value=="1"||value==1){
                                 	return "运输中";
                                 }
                                 return "空闲";
							}
						}, {
							header : '起点',
							dataIndex : 'start',
							sortable : false,
							hidden : true
						}, {
							header : '中途',
							dataIndex : 'midway',
							sortable : false,
							hidden : true
						}, {
							header : '终点',
							dataIndex : 'end',
							sortable : false,
							hidden : true
						}, {
							header : '',
							dataIndex : 'view',
							width : 70,
							sortable : false,
							renderer : renderView,
							hidden : true
						} ];

						var qiyeModel = Ext.define('qiyeModel', {
							extend : 'Ext.data.Model',
							fields : [ {
								name : 'id',
								type : 'string',
								defaultValue : null
							}, {
								name : 'point',
								type : 'string',
								defaultValue : null
							}, {
								name : 'des',
								type : 'string',
								defaultValue : null
							},
							{
								name : 'fddbr',
								type : 'string',
								defaultValue : null
							},
							{
								name : 'fddbrdh',
								type : 'string',
								defaultValue : null
							},
							{
								name : 'hblxr',
								type : 'string',
								defaultValue : null
							},
							{
								name : 'hblxrdh',
								type : 'string',
								defaultValue : null
							},
							{
								name : 'jtdz',
								type : 'string',
								defaultValue : null
							},
							{
								name : 'zl',
								type : 'int'
							}]
						});

						var tucengModel = Ext.define('tucengModel', {
							extend : 'Ext.data.Model',
							fields : [ {
								name : 'mapObject',
								type : 'auto',
								defaultValue : null
							}, {
								name : 'points',
								type : 'string',
								defaultValue : null
							} ]
						});

						var grid = new Ext.grid.GridPanel({
							id : 'grid',
							region : 'center',
							store : store, // 转换后的数据
							collapsible : false,
							height : 190,
							autoScroll : true,
							border : false,
							columns : columns, // 显示列
							stripeRows : true, // 斑马线效果
							columnWidth : 1,
							loadMask : true, // 显示遮罩和提示功能,即加载Loading……
							forceFit : true,
							listeners : {
								'itemclick' : function(
										e,
										record,
										node) {
									var children = window.frames["GIS"];
									var key = "cl" + record.data.cl_id;
									var marker = markerList.GetValue(key);
									marker.openInfoWindow(marker.win); // 打开信息窗口
									premarker = marker;
									var car = carPiList.GetValue(key);
									var lonlat = {
										x : car.lng,
										y : car.lat
									};
									children.goCenter(lonlat);
								}
							}
						// 自动填满表格
						});

						westPanel = new Ext.Panel(
								{
									region : 'west',
									title : '功能菜单',
									collapsible : true,
									collapsed : true,
									split : true,
									width : 235,
								    layout: 'anchor',
									items : [
											{
												xtype : 'tabpanel',
												id : 'leftTab',
												//height : 350,
												anchor:'100% 60%',
												padding : '5 0 0 0',
												plain : true,
												hidden : true,
												split : true,
												items : [
														{
															xtype : 'panel',
															title : '产废企业',
															padding : '5 5 5 5',
															items : [
																	{
																		layout : 'column',
																		items : [
																				{
																					id : 'cfqy_qymc',
																					columnWidth : .7,
																					xtype : 'textfield',
																					emptyText : '输入企业名称',
																					width : 160
																				},
																				{
																					columnWidth : .3,
																					xtype : 'button',
																					text : '查询',
																					iconCls : 'SearchB',
																					margin : '0 0 0 5',
																					handler : function() {
																						var qymc = Ext.getCmp('cfqy_qymc').value;
																						var cfqyTree = Ext.getCmp('cfqyTree');
																						var param = {
																								'qymc' : qymc,
																								'zl' : '2'
																							};
																						LoadChildMenus(
																								"gis/gis_queryGisQY.do",
																								cfqyTree,
																								true, param);
																					}
																				} ]
																	},
																	{
																		layout : 'column',
																		bodyPadding : '5 0 0 0',
																		items : [ {
																			columnWidth : 1,
																			id : 'cfqyTree',
																			model : 'qyInfo',
																			xtype : 'treepanel',
																			enableDD : true,
																			rootVisible : false,
																			autoDestroy : true,
																			height : 190,
																			autoScroll : true,
																			listeners : {
																				'itemclick' : function(
																						e,
																						record,
																						node) {
																					var children = window.frames["GIS"];
																					var marker = markerList
																							.GetValue(record.raw.qyid);
																					marker
																							.openInfoWindow(marker.win); // 打开信息窗口
																					premarker = marker;
																					var lonlat = {
																						x : record.raw.point
																								.split(',')[0],
																						y : record.raw.point
																								.split(',')[1],
																						title : record.raw.text,
																						des : record.raw.des,
																						img : record.raw.img
																					};
																					children
																							.goCenter(lonlat);
																				}
																			}
																		} ]
																	} ]
														},
														{
															xtype : 'panel',
															title : '转运车辆',
															padding : '5 5 5 5',
															items : [
																	{
																		layout : 'column',
																		items : [
																				{
																					id:'cl_qymc',
																					columnWidth : .7,
																					xtype : 'textfield',
																					emptyText : '企业名称/车牌号码',
																					margin : '0 0 0 5',
																					width : 160
																				},
																				{
																					columnWidth : .3,
																					xtype : 'button',
																					text : '查询',
																					iconCls : 'SearchB',
																					//margin : '0 0 0 5',
																					handler : function() {
																						var qymc = Ext.getCmp('cl_qymc').value;
																						 if(qymc){			 
																							 grid.store.load({
																								params : {
																									qymc : qymc
																								}
																							});
																						 }else{
																						 	grid.store.load();// 刷新整个grid视图，重新排序
																						 }
																						 
																					}
																				} ]
																	},
																	{
																		layout : 'column',
																		bodyPadding : '5 0 0 0',
																		items : [ grid ]
																	} ]
														},{
															xtype : 'panel',
															title : '处置企业',
															padding : '5 5 5 5',
															items : [{
																			layout : 'column',
																			items : [
																					{
																						id : 'czqy_qymc',
																						columnWidth : .7,
																						xtype : 'textfield',
																						emptyText : '输入企业名称',
																						width : 160
																					},
																					{
																						columnWidth : .3,
																						xtype : 'button',
																						text : '查询',
																						iconCls : 'SearchB',
																						margin : '0 0 0 5',
																						handler : function() {
																							var qymc = Ext.getCmp('czqy_qymc').value;
																							var czqyTree = Ext.getCmp('czqyTree');
																							var param = {
																									'qymc' : qymc,
																									'zl' : '4'
																								};
																							LoadChildMenus(
																									"gis/gis_queryGisQY.do",
																									czqyTree,
																									true, param);
																						}
																					} ]
																		},
																		{
																			layout : 'column',
																			bodyPadding : '5 0 0 0',
																			items : [ {
																				columnWidth : 1,
																				id : 'czqyTree',
																				model : 'qyInfo',
																				xtype : 'treepanel',
																				enableDD : true,
																				rootVisible : false,
																				autoDestroy : true,
																				height : 270,
																				autoScroll : true,
																				listeners : {
																					'itemclick' : function(
																							e,
																							record,
																							node) {
																						var children = window.frames["GIS"];
																						var marker = markerList
																								.GetValue(record.raw.qyid);
																						marker
																								.openInfoWindow(marker.win); // 打开信息窗口
																						premarker = marker;
																						var lonlat = {
																							x : record.raw.point
																									.split(',')[0],
																							y : record.raw.point
																									.split(',')[1],
																							title : record.raw.text,
																							des : record.raw.des,
																							img : record.raw.img
																						};
																						children
																								.goCenter(lonlat);
																					}
																				}
																			} ]
																		} ]
														} ]
											},
											{
												xtype : 'treepanel',
												id : 'treePanel',
												enableDD : true,
												rootVisible : false,
												animate : false, // 展开动画
												//height : 150,
												anchor:'100% 40%',
												autoDestroy : true,
												autoScroll : true,
												listeners : {
													// 监听单击事件
													'itemclick' : function(
															node, record) {
														TreeExpand1(record);
													},
													'checkchange' : function(
															node, checked) {// 传递两个参数,一个是当前节点,一个是当前节点的选中状态
														node.checked = checked; // 将当前状态赋值给node
														var children = window.frames["GIS"];
														if (checked) {
															if (node.raw.points != null) {
																var mapObject = children
																		.addPlygon(
																				node.raw.points,
																				null,
																				true);
																node.data.mapObject = mapObject;
															} else {
																children
																		.getBoundary(node);
															}
														} else {
															children
																	.removeOverlay(node.data.mapObject);
														}
													}
												}
											} ]
								});

						function addTab(title, url) {
							// debugger
							var t = tabs;
							for ( var _item = 0; _item < t.items.items.length; _item++) {
								if (t.items.items[_item].title == title) {
									t.setActiveTab(t.items.items[_item]);
									return;
								}
							}

							var frameName = "content";
							if (title == "地理信息平台") {
								frameName = "GIS";
							}
							t
									.add(
											{
												title : title,
												closable : true,
												html : '<iframe id="'
														+ frameName
														+ '" name="'
														+ frameName
														+ '" src='
														+ url
														+ ' width="100%" height="100%" frameborder="0"></iframe>'
											}).show();
						}
						;

						var tabClick = function() {
							addTab(this.text, this.url);
						};

						function TreeExpand(record) {
							if (record.data.qtitle == null
									|| record.data.qtitle == undefined
									|| record.data.qtitle == "") {
								return;
							}
							var url = record.data.qtitle;
							var par = record.data.parms;
							var title = record.data.text;
							addTab(title, url);
						}
						;

						var LoadChildMenus = function(MenuCode, tree, ismap, params) {
							// debugger
							//var leftTab = Ext.getCmp("leftTab");
							//leftTab.setVisible(false);
							westPanel.expand();
							Ext.Ajax
									.request({
										//async : false, // 异步模式
										//headers : {
										//	'Content-Type' : 'text/html; charset=utf-8'
										//},
										type: "POST", // 发送数据
										// jsonData: { MenuCode: MenuCode },
										url : MenuCode,
										params : params,
										// url:
										// "WebService.asmx/LoadChildMenus", //
										// WebService 地址和方法
										success : function(request, opt) {
											// debugger
											var text = request.responseText;
											var data = Ext.JSON.decode(text);
											// data =
											// Ext.JSON.decode(data.d);//WebSerivce需要.d
											//MenuCode
											if(MenuCode=="gis/gis_queryGisQY.do"){
												data=data.data;					
											}
											tree.getRootNode().removeAll(false);
											tree.getRootNode()
													.appendChild(data);
											if (ismap) {
												if(opt.params.zl == '2') cfqyFlag = true;
												if(opt.params.zl == '4') czqyFlag = true;
												// debugger
												// 遍历树数据，将坐标信息存入集合中
												for ( var i = 0; i < tree
														.getRootNode().childNodes.length; i++) {// 加载第一级
													// 获取树数据中的坐标信息
													//		alert(tree.getRootNode().childNodes[i].raw.point);
													//console.log("----"+tree.getRootNode().childNodes[i].raw.point);
													//console.log("++++"+tree.getRootNode().childNodes[i].raw.wastes);
													var points = {
														id : tree.getRootNode().childNodes[i].raw.qyid,
														lng : tree
																.getRootNode().childNodes[i].raw.point
																.split(',')[0],
														lat : tree
																.getRootNode().childNodes[i].raw.point
																.split(',')[1],
														title : tree
																.getRootNode().childNodes[i].raw.text,
														des : tree
																.getRootNode().childNodes[i].raw.des,
														zl  : tree
																.getRootNode().childNodes[i].raw.zl,
														fddbr  : tree
																.getRootNode().childNodes[i].raw.fddbr,
														fddbrdh  : tree
																.getRootNode().childNodes[i].raw.fddbrdh,
														hblxr  : tree
																.getRootNode().childNodes[i].raw.hblxr,
														hblxrdh : tree
																.getRootNode().childNodes[i].raw.hblxrdh,
														jtdz : tree
																.getRootNode().childNodes[i].raw.jtdz,
														wastes : tree
																.getRootNode().childNodes[i].raw.wastes,
														hy : tree
																.getRootNode().childNodes[i].raw.hy,
														hydm : tree
																.getRootNode().childNodes[i].raw.hydm
													};
													//console.log("++++"+points.wastes[0].name);
													
													pointList.Add(tree.getRootNode().childNodes[i].raw.qyid,points);
													if(tree.getRootNode().childNodes[i].data.children!=null){
														for ( var j = 0; j < tree.getRootNode().childNodes[i].data.children.length; j++) {// 第二级
															var points = {
																lng : tree
																		.getRootNode().childNodes[i].data.children[j].point
																		.split(',')[0],
																lat : tree
																		.getRootNode().childNodes[i].data.children[j].point
																		.split(',')[1],
																title : tree
																		.getRootNode().childNodes[i].data.children[j].text,
																des : tree
																		.getRootNode().childNodes[i].data.children[j].des,
																zl  : tree
																		.getRootNode().childNodes[i].raw.zl
															};
															// debugger
															pointList
																	.Add(
																			tree
																					.getRootNode().childNodes[i].data.children[j].id,
																			points);
														}
													}
												}
											}
										}, // 执行成功
										failure : function(request, opt) {
											// debugger
											alert("请求菜单失败!");
										} // 执行失败
									});
						};
						
						var LoadCarList = function(MenuCode, grid) {
							grid.store.load({
								callback: function(r,options,success) {
									if (success) {
										carPiList = new HashTable(); // 初始化点集合
										for (var i = 0; i < r.length; i++) {
											//alert(r[i].data.lxdh);
											var points = {
													cl_id : r[i].data.cl_id,
													cph : r[i].data.cph,
													csdwmc : r[i].data.csdwmc,
													jsdwmc : r[i].data.jsdwmc,
													ysfzr : r[i].data.ysfzr,
													zl  : r[i].data.zt,
													lxdh : r[i].data.lxdh,
													qymc : r[i].data.qymc,
													yswflx : r[i].data.yswflx
												};
											carPiList.Add("cl" + r[i].data.cl_id, points);
										}
									} else {
										alert("请求菜单失败!");
									}
									
								}
							});
						};
						
						Ext
								.applyIf(
										me,
										{
											items : [
													{
														xtype : 'panel',
														region : 'north',
														bodyStyle : 'padding-top:0px;background-position:left center;background-repeat:no-repeat;background-size:100% 100px;background-image:url(images/1215.png)',
														height : 100,
														itemId : 'headerPanel',
														split : true,
														items : [ {
															xtype : 'container',
															layout : 'column',
															items : [
																	{
																		xtype : 'label',
																		padding : '0 10 2 0',
																		html : "&nbsp;&nbsp;&nbsp;&nbsp;<img  style='padding-top:0px;' src='images/u16.png' height='65' /> "
																	},
																	{
																		xtype : 'label',
																		border : 0,
																		padding : '10 0 20 30',
																		html : "<span style='font-family:微软雅黑;font-size:26px;color:#080808'>衢州市固体废物综合监管系统</span>"
																	} ]
														} ],
														dockedItems : [ {
															xtype : 'toolbar',
															dock : 'bottom',
															id : 'mainMenus',
															items : [ {
																xtype : 'button',
																id : 'znjk',
																text : '智能监控',
																handler : function(t) {
																	var tree = Ext
																			.getCmp('treePanel');
																	var cfqyTree = Ext
																			.getCmp('cfqyTree');
																	var czqyTree = Ext
																			.getCmp('czqyTree');
																	var grid = Ext
																			.getCmp('grid');
																	tree.store.model = tucengModel;
																	cfqyTree.store.model = qiyeModel;
																	czqyTree.store.model = qiyeModel;
																	LoadChildMenus(
																			"tuceng.json",
																			tree,
																			false);

																	pointList = new HashTable(); // 初始化点集合
																	cfqyFlag = false;
																	czqyFlag = false;
																	var param = {'zl' : '2'};
																	LoadChildMenus(
																			"gis/gis_queryGisQY.do",
																			cfqyTree,
																			true, param);
																	
																	var param = {'zl' : '4'};
																	LoadChildMenus(
																			"gis/gis_queryGisQY.do",
																			czqyTree,
																			true, param);
																	LoadCarList('gis/gis_queryCarList.do', grid);
																	addTab(
																			"地理信息平台",
																			"map/index.html?a=4111121111111");
																	var leftTab = Ext
																			.getCmp("leftTab");
																	leftTab
																			.setVisible(true);
																	westPanel
																			.expand();
																	clearToolbarSelect();
																	t.setText('<font color="Blue">'+t.text+'</font>');
																},
																width : 120
															}

															]
														} ]
													},
													westPanel,
													tabs,
													{
														region : 'south',
														title : footer,
														hidden : false,
														height : 30,
														maxHeight : 30,
														split : true,
														bodyStyle : {
															fontSize : '12px',
															padding : '20,20,20,20'
														}
													} ]
										});
						me.callParent(arguments);
						init();
					}

				});
// 初始化加载主菜单
function init() {
	
	CallWebService("menus/menus_loadMainMenus.do", null, function(request,
			options) {
		result = request.responseText;
		var requestText = eval("(" + result + ")");
		var data = requestText.data;
	
		// 如果返回数据不空
		if (data != null) {
			
			//vardump(data);
			var toolbar = Ext.getCmp('mainMenus');  
            var zhinengBar=toolbar.items.last();
			var ua = navigator.userAgent.toLowerCase(); 
			var isIE8 = ua.indexOf("msie 8") > -1;
			
			// 循环数据
			for ( var i = 0; i < data.length; i++) {
			
				if (i != data.length - 1) {
					
					
                    if(i==0){//插入首页后查入智能
						toolbar.add(0,
						{
							xtype : 'button',
							id : data[i].id,
							text : '<font color="Blue">'+data[i].text+'</font>',
							nametxt:data[i].text,
							width : 120,
							handler : function(t) {
                              
								querySubMenus(t);
								clearToolbarSelect();
								
								t.setText('<font color="Blue">'+t.text+'</font>');

								//t.cls='transparentBut';

								
							}
						}, '-');

						/*
						if(!isIE8)
						{
							toolbar.add(zhinengBar,'-');
						}
						*/
					}
					else{
						toolbar.add(
								{
									xtype : 'button',
									id : data[i].id,
									text : data[i].text,
									nametxt:data[i].text,
									width : 120,
									handler : function(t) {
									  
										querySubMenus(t);
										clearToolbarSelect();
										
										t.setText('<font color="Blue">'+t.text+'</font>');

										//t.cls='transparentBut';

										
									}
								}, '-');

					}

				} else {
					toolbar.add({
						text : data[i].text,
						id : data[i].id,
						width : 120,
						handler : function(t) {
							querySubMenus(t);
							clearToolbarSelect();
							t.setText('<font color="Blue">'+t.text+'</font>');
						}
					}, '->');
				}
			}
			toolbar.add({
				xtype : 'panel',
				border : 0,
				html : '您好,' + loginName,
				width : loginName.length * 12 + 40
			}, '-', {
				xtype : 'panel',
				border : 0,
				html : '<a href="javascript:editPwd();" id="ExitBtn">修改密码</a>',
				width : 55
			}, '-', {
				xtype : 'panel',
				border : 0,
				html : '<a href="javascript:Exit();" id="ExitBtn">安全退出</a>',
				width : 55
			});
			toolbar.doLayout();
		}
	}, null);
	var rylb = document.getElementById("rylb").value;
	if(rylb!=1&&rylb!=6){//隐藏智能监控
		Ext.getCmp('znjk').hide();
	}
};

function clearToolbarSelect(){
	
	var toolbar = Ext.getCmp('mainMenus');
	var items=toolbar.items;
	for(var i=0;i<toolbar.items.length;i++){
        
		var item=toolbar.items.get(i);
        if(typeof(item.text)== 'undefined')
		{

		}
		else{

			var itemTxt=item.text.replace('<font color="Blue">', "");
			itemTxt=itemTxt.replace('</font>', "");
			item.setText(itemTxt);
	    }



	}
	/*
	alert(toolbar.items.get(2).text);
	Ext.each(items,function(item){
		alert(11);
		alert(item.text);
	});
    
	/*
	for(var p in toolbar.items){
		
		alert(toolbar.items[p].width);
		toolbar.items[p].setText(toolbar.items[p].text+"11");



	}
    */
}

// 展开子菜单
function querySubMenus(code) {
	var page_code = code.id;
	var param = {
		'page_code' : page_code
	};
	CallWebService("menus/menus_loadSubMenus.do", param, function(request,
			options) {
		result = request.responseText;
		var requestText = eval("(" + result + ")");
		var data = requestText.data;
		var mainMenus = data.mainMenus;
		var pageInfo = data.pageInfo;
		// 如果返回数据不空
		if (mainMenus != null) {
			var leftTab = Ext.getCmp("leftTab");
			leftTab.setVisible(false);
			westPanel.expand();
			var tree = Ext.getCmp('treePanel');
			tree.getRootNode().removeAll(false);
			tree.getRootNode().appendChild(mainMenus);
		} else {
			var text = pageInfo.page_name;
			var url = pageInfo.page_url;
			addTab1(text, url);
		}
	}, null);

};
function addTab1(title, url) {
	// contentPanel
	var t = Ext.getCmp("contentPanel");
	for ( var _item = 0; _item < t.items.items.length; _item++) {
		if (t.items.items[_item].title == title) {
			t.setActiveTab(t.items.items[_item]);
			return;
		}
	}
	t
			.add(
					{
						title : title,
						closable : true,
						html : '<iframe id="content" src='
								+ url
								+ ' width="100%" height="100%" frameborder="0"></iframe>'
					}).show();
};

markerList = new HashTable();
var LoadMarkers = function(addmarker) {
	if (!cfqyFlag || !czqyFlag) {
		return false;
	}
	
	for ( var i = 0; i < this.pointList.Count; i++) {
		var key = this.pointList.GetKey(i);
		markerList.Add(key, addmarker(pointList.GetValue(key)));
	}
	
	return true;
};

lineList = new HashTable();
var LoadLines = function(addmarker, addline){
	if (!carPiList) {
		return false;
	}
	
	for ( var i = 0; i < this.carPiList.Count; i++) {
		var key = this.carPiList.GetKey(i);
		var car = carPiList.GetValue(key);
		if (car.onShowHistory) {
			
		} else {
			CallWebService('gis/gis_queryCarTrack.do', {'id': car.cl_id}, function(request,
					options) {
				var result = request.responseText;
				var requestText = eval("(" + result + ")");
				var data = requestText.data;
				var key = "cl" + options.params.id;
				var car = carPiList.GetValue(key);
				var marker = markerList.GetValue(key);
				var line = lineList.GetValue(key);
				var isOpen = (marker != null && marker.win.isOpen());
				if (marker && !isOpen) {
					markerList.Remove(key);
				}
				if (line) {
					lineList.Remove(key);
				}
				if (data && !isOpen) {
					car.lng = data[0].jd;
					car.lat = data[0].wd;
					car.cl = 1;
					markerList.Add(key, addmarker(car, marker));
				}
				var points = [];
				for (var j = 0; j < data.length; j++) {
					points[j] = {
						lng : data[j].jd,
						lat : data[j].wd
					};
				}
				lineList.Add(key, addline(points, line));
			}, null);
		}
	}
	return true;
};

var Exit = function() {
	Ext.MessageBox.show({
		title : '提示',
		msg : '确定要退出系统？',
		buttons : Ext.MessageBox.YESNO,
		fn : ExitSystem,
		animEl : 'ReleaseSuper',
		icon : Ext.MessageBox.QUESTION
	});
};

/*
 * 退出系统
 */
function ExitSystem(confirmResult) {
	if (confirmResult == "yes") {
		try {
			Ext.MessageBox.alert("提示", "您已安全退出系统!");
			setTimeout(function() {
				window.location.href = 'tologout.do';
			}, 500);
		} catch (e) {
			alert("退出系统时发生异常!");
		}
	}
};

var ExitFail = function(request, options) {
	window.close();
};
/*
 * 退出系统成功
 */
var ExitSuc = function(request, options) {
	result = Ext.JSON.decode(request.responseText);
	switch (result.d) {
	case "Success":
		Ext.MessageBox.alert("提示", "您已安全退出系统!");
		setTimeout(function() {
			location.href = "tologout.do";
		}, 500);
		break;
	case "Fail":
		alert("请求注销失败!请直接关闭浏览器退出!");
		window.close();
		break;
	}
};

var win;
/*
 * 打开一个新窗口 params: title 标题, width 宽度, height 高度, url 子页面url
 * 
 */
var ShowWindow = function(title, width, height, url) {//znjk/znjk_toJkPage.do
	Ext.QuickTips.init();
	//alert(title);
//	if (!win) {
		win = new Ext.Window(
				{
					applyTo : 'hello-win',
					layout : 'fit',
					title : title,
					maximizable : false,
					width : 400,
					draggable : true,
					html : '<iframe style="padding:1px 1px 1px 1px" frameborder="0" id="child" name="child" width="100%" height="100%" src="'
							+ url + '" />',
					resizable : false,
					modal : true,
					border : false,
					height : 300,
					closeAction : 'hide',
					plain : false
				});
//	} else {
//		document.getElementById("child").src = url;
//	}
	win.setTitle(title);
	win.setWidth(width);
	win.setHeight(height);
	win.doLayout();
	win.show();
	win.center();
	delete applyTo;
	delete draggable;
	delete modal;
	delete frame;
	delete pageY;
	delete border;
	delete constrain;
	delete closable;
	delete layout;
	delete width;
	delete height;
	delete plain;
	delete items;
	delete html;
	// Ext.Window.superclass.onDestroy.call(this);
};

var ShowWindow2 = function(title, width, height, url) {//znjk/znjk_toJkPage.do
	Ext.QuickTips.init();
	//alert(title);
//	if (!win) {
		win = new Ext.Window(
				{
					applyTo : 'hello-win',
					layout : 'fit',
					title : title,
					maximizable : true,
					width : 400,
					draggable : true,
					html : '<iframe style="padding:1px 1px 1px 1px" frameborder="0" id="child" name="child" width="100%" height="100%" src="'
							+ url + '" />',
					resizable : true,
					modal : true,
					border : false,
					height : 300,
					closeAction : 'hide',
					plain : false
				});
//	} else {
//		document.getElementById("child").src = url;
//	}
	win.setTitle(title);
	win.setWidth(width);
	win.setHeight(height);
	win.doLayout();
	win.show();
	win.center();
	delete applyTo;
	delete draggable;
	delete modal;
	delete frame;
	delete pageY;
	delete border;
	delete constrain;
	delete closable;
	delete layout;
	delete width;
	delete height;
	delete plain;
	delete items;
	delete html;
	// Ext.Window.superclass.onDestroy.call(this);
};



// 修改密码
function editPwd() {
	var subWindow1 = Ext.create('Ext.window.Window', {
		xtype : "panel",
		height : 245,
		width : 400,
		defaultAlign : 'center',
		resizable : false,
		modal : true,
		title : '修改密码',
		items : [ {
			xtype : 'form',
			width : 400,
			height : 200,
			bodyPadding : 40,
			buttonAlign : 'center',
			items : [ {
				layout : "column",
				border : 0,
				items : [ {
					xtype : "form",
					border : 0,
					bodystyle : "padding-left:30px;",
					items : [ {
						xtype : 'textfield',
						id : 'ymm',
						width : 300,
						allowBlank : false,
						labelAlign : 'right',
						labelwidth : 80,
						inputType : 'password',
						fieldLabel : '原密码'
					}, {
						xtype : 'textfield',
						id : 'xmm',
						width : 300,
						labelwidth : 80,
						labelAlign : 'right',
						allowBlank : false,
						inputType : 'password',
						fieldLabel : '新密码'
					}, {
						xtype : 'textfield',
						id : 'qrmm',
						width : 300,
						labelAlign : 'right',
						allowBlank : false,
						labelwidth : 80,
						inputType : 'password',
						fieldLabel : '确认密码'
					} ]
				} ]
			} ],
			buttons : [
					{
						width : 80,
						text : '确认',
						handler : function() {
							var ymm = Ext.getCmp("ymm").getValue();
							var xmm = Ext.getCmp("xmm").getValue();
							var qrmm = Ext.getCmp("qrmm").getValue();
							if (xmm != qrmm) {
								Ext.Msg.alert("提示", "两次密码不同");
								return;
							}
							var param = {
								'ymm' : ymm,
								'xmm' : xmm
							};
							CallWebService("firstPage/zf_editPassWord.do",
									param, function(request, options) {
										result = request.responseText;
										var requestText = eval("(" + result
												+ ")");
										var msg_no = requestText.msg_no;
										switch (msg_no) {
										case "0":
											Ext.Msg.alert("提示", "修改成功");
											subWindow1.destroy();
											break;
										case "-2":
											Ext.Msg.alert("提示", "原密码错误");
											break;
										default:
											Ext.Msg.alert("提示", "修改失败!");
											loadflag = false;
											break;
										}
									}, null);

						}
					}, {
						width : 80,
						text : '取消',
						handler : function() {
							subWindow1.destroy();
						}
					} ]
		} ]
	});
	subWindow1.show();
}
function TreeExpand1(record) {
	if (record.data.qtitle == null || record.data.qtitle == undefined
			|| record.data.qtitle == "") {
		return;
	}
	var url = record.data.qtitle;
	var par = record.data.parms;
	var title = record.data.text;
	addTab1(title, url);
};